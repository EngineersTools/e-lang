{"cells":[{"kind":1,"language":"markdown","value":"# Types\n\nElang is a statically typed language"},{"kind":2,"language":"elang","value":"domain Types\n\nmodel ParentModel {\n    id: text\n}\n\nmodel SimpleModel extends ParentModel {\n    textProperty: text\n    numberProperty: number\n    optionalProperty?: boolean\n}\n\nconst textConst: text = 'text'\nvar textVariable: text = '2 + 1'\nprint textVariable\nprint numberConst\nconst numberConst: number = 1 + 2\nconst booleanConst: boolean = true\nconst modelConst: SimpleModel = {\n    // id: 'true',\n    textProperty: 'text',\n    numberProperty: 1,\n    someOtherProp: true\n}\n\n{\n    const impliedModel = {\n        prop1: 1,\n        prop2: '2'\n    }\n}\n\n// const numberListConst: listof text = [1, 1, 2, 3, 4]\n// const textListConst: listof text = ['1', '2', '3']\n// const booleanListConst: listof boolean = [true, false, true]\n// const lambdaConst: (x: number) => number = (x) => x + 1\n\n// const nullTextConst: text = null\n// const nullNumberConst: number = null\n// const nullBooleanConst: boolean = null\n// const nullListConst: listof number = null\n\n// const wrongTextConst: text = 1\n// const wrongTextConst: text = true\n// const wrongNumberConst: number = 'text'\n// const wrongNumberConst: number = true\n// const wrongBooleanConst: boolean = 1\n// const wrongBooleanConst: boolean = '1'"}]}