{"cells":[{"kind":1,"language":"markdown","value":"# Types\n\n`e-lang` is a statically typed language"},{"kind":2,"language":"e-lang","value":"domain Types\n\nmodel GrandParentModel {\n    name: text\n}\n\nmodel ParentModel extends GrandParentModel {\n    id: text\n}\n\nmodel PropertyModel {\n    name: text\n    value: number\n}\n\nmodel SimpleModel extends ParentModel {\n    textProperty: text\n    numberProperty: number\n    properyProperty: PropertyModel\n    optionalProperty?: boolean\n    override name: text\n    override id: boolean\n}\n\n// print SimpleModel\n\nconst textConst = 'text'\nvar textVariable: text = '2 + 1'\nprint textVariable\nconst numberConst: number = 1 + 2\nprint numberConst\nconst booleanConst: boolean = true\nconst modelConst: SimpleModel = {\n    id: true,\n    name: 'name',\n    textProperty: 'text',\n    numberProperty: 1,\n    properyProperty: {\n        name: 'name',\n        value: 1\n    }\n} \n\nprint modelConst.id\n\n\nconst impliedModel = {\n    prop1: 1,\n    prop2: '2'\n}\n\n\nconst numberListConst: (number or text) list = [1,'t',2,3]\nprint numberListConst\nconst textListConst: text list = ['1', '2', '3']\nconst booleanListConst: boolean list = [true, false, true]\nconst lambdaConst: (x: number) => number = (x) => x + 1\n\n// const nullTextConst: text = null\n// const nullNumberConst: number = null\n// const nullBooleanConst: boolean = null\n// const nullListConst: number list = null\n\n// const wrongTextConst: text = 1\n// const wrongTextConst: text = true\n// const wrongNumberConst: number = 'text'\n// const wrongNumberConst: number = true\n// const wrongBooleanConst: boolean = 1\n// const wrongBooleanConst: boolean = '1'\n\nformula add(x: number, y: number) returns number {\n    print 'Hello World'\n    return x + y\n}\n\nconst form = add\n\nprint form(1, 2)"}]}