{"cells":[{"kind":1,"language":"markdown","value":"# Types\n\nElang is a statically typed language"},{"kind":2,"language":"elang","value":"domain Types\n\nmodel ParentModel {\n    id: text\n}\n\nmodel SimpleModel extends ParentModel {\n    textProperty: text\n    numberProperty: number\n    optionalProperty?: boolean\n}\n\nconst textConst: text = 'text'\nvar textVariable: text = '2 + 1'\nprint textVariable\nprint numberConst\nconst numberConst: number = 1 + 2\nconst booleanConst: boolean = true\nconst modelConst: SimpleModel = {\n    // id: 'true',\n    textProperty: 'text',\n    numberProperty: 1,\n    someOtherProp: true\n} \n\n{\n    const impliedModel = {\n        prop1: 1,\n        prop2: '2'\n    }\n}\n\nconst numberListConst: listof text = [1, 1, 2, 3, 4]\nconst textListConst: listof text = ['1', '2', '3']\nconst booleanListConst: listof boolean = [true, false, true]\nconst lambdaConst: (x: number) => number = (x) => x + 1\n\nconst nullTextConst: text = null\nconst nullNumberConst: number = null\nconst nullBooleanConst: boolean = null\nconst nullListConst: listof number = null\n\nconst wrongTextConst: text = 1\nconst wrongTextConst: text = true\nconst wrongNumberConst: number = 'text'\nconst wrongNumberConst: number = true\nconst wrongBooleanConst: boolean = 1\nconst wrongBooleanConst: boolean = '1'"}]}