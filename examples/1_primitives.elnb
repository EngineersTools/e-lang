{"cells":[{"kind":1,"language":"markdown","value":"# Primitives\n\nelang has the following primitive types:\n\n- `number`\n- `text`\n-  `boolean`\n- `number_[UnitFamily]`:  Represents a measurement with a related numeric value and a `unit` belonging to a `unit_family` (see [Units](./units.elnb))"},{"kind":2,"language":"elang","value":"domain Primitives\n\n// const aNumber: number = 10\n// print aNumber\n\n// const aText: text = \"Hello World\"\n// print aText\n\n// const aBoolean: boolean = true\n// print aBoolean\n\nunit_family Length {\n    unit m: metre\n}\n\nunit_family Time {\n    unit s: second\n}\n\nconst aLength: number_[Length] = 10_[m]\nprint aLength"},{"kind":1,"language":"markdown","value":"## Inference\n\nIf the type of a variable is not declared, it will be inferred based on its value."},{"kind":2,"language":"elang","value":"domain Inference\n\nconst infNumber = 5\nprint infNumber + 10\n\nconst infText = \"Inferred\"\nprint infText + \" World\" \n\nconst infBoolean = true\nprint infBoolean and false\n\nconst infModel = {\n    id: 1,\n    name: \"Inferred Model\"\n}"}]}