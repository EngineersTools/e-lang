{"cells":[{"kind":1,"language":"markdown","value":"# Models\n\nIn **e-lang** models represent an engineering concept and its associated properties. Models are meant to describe what the concept **is**.\n\nThe concept could refer to a physical entity or an abstract concept. A model is declared using the `model` keyword followed by the model name.\n"},{"kind":2,"language":"e-lang","value":"domain Models\n\nunit_family Mass {\n    unit kg\n    unit lb\n\n    conversion lb->kg: (val) => val * 0.45359237\n    conversion kg->lb: (val) => val / 0.45359237\n}\n\nunit_family Temperature {\n    unit celsius\n    unit fahrenheit\n\n    conversion celsius->fahrenheit: (val) => val * 9/5 + 32\n    conversion fahrenheit->celsius: (val) => (val - 32) * 5/9\n}\n\nprint -100_[kg]\nconst myTemp = -40_[celsius] \nprint myTemp->fahrenheit\nprint (-212_[fahrenheit])->celsius\n\nmodel Asset {\n    id: number\n    name: text\n    weight?: number_[Mass]\n}\n\nconst asset1: Asset = {\n    id: 1,\n    name: 'asset1',\n    weight: 100_[kg]\n}\n\nprint asset1.id\nprint asset1.weight->lb\n\nmodel Transformer extends Asset {\n    override id: text\n}\n\nconst tx1: Transformer = {\n    id: \"2\",\n    name: \"TX1\",\n    weight: 200_[lb]\n}\n\nprint tx1\nprint tx1.id\nprint tx1.weight\nprint tx1.weight->kg"},{"kind":2,"language":"e-lang","value":"domain Models\n\nmodel FlagProp {\n    value: FlagValueProp\n}\n\nmodel FlagValueProp {\n    subValue: boolean\n    subList: text list\n}\n\nmodel Parent {\n    description?: text\n}\n\nmodel Asset extends Parent {\n    id: number or text \"The unique identifier for the asset\"\n    name: text \"The name of the asset\"\n    flag: FlagProp\n    // override description: number\n}\n\nconst myAsset = {\n    id: 1,\n    name: \"Asset1\",\n    flag: {\n        value: {\n            subValue: true\n        }\n    },\n    description: \"This is an asset\"\n}\n\nprint myAsset.id\nprint myAsset.name\nprint myAsset.description\nprint myAsset.flag\nprint myAsset.flag.value\nprint myAsset.flag.value.subValue\nmyAsset.flag.value = {\n    subValue: false\n}\nprint !myAsset.flag.value.subValue\nprint myAsset.flag.value\nprint myAsset.flag"},{"kind":2,"language":"e-lang","value":"domain NestedModels\n\nmodel ModelOne {\n    value: number\n}\n\nmodel NestedModel {\n    nestedModel: ModelOne list\n}\n\nmodel ModelTwo {\n    modelValue: NestedModel\n    otherProp: ModelOne\n}\n\nconst myModelThree: ModelTwo = {\n    modelValue: [\n            { value: 1 },\n            { value: 2 }\n        ]\n    ,\n    otherProp: { value: 3 }\n}\n\nprint myModelThree.modelValue\nconst subModel = myModelThree.modelValue[0]\nprint myModelThree.otherProp\nprint myModelThree.modelValue.nestedModel[0]\nprint myModelThree.modelValue[1]\n\nmodel ModelFour {\n    value: (val: number) => text\n}\n\nconst myModelFour: ModelFour = {\n    value: (val: number) => \"Hello \" + val\n}\n\nprint myModelFour.value\nprint myModelFour.value(1)"},{"kind":2,"language":"e-lang","value":"domain NestedModels\n\nmodel ModelOne {\n    numberProp: number\n    textProp: text\n    booleanProp: boolean\n}\n\nmodel NestedModel {\n    nestedModel: ModelOne list\n}\n\nmodel SubNestedModel {\n    subNestedModel: NestedModel\n}\n\nmodel ModelTwo {\n    modelValue: SubNestedModel\n    otherProp: ModelOne\n}\n\nconst myModelThree: ModelTwo = {\n    modelValue: {\n        subNestedModel: {\n            nestedModel: [\n                { numberProp: 1, textProp: \"one\", booleanProp: true },\n                { numberProp: 2, textProp: \"two\", booleanProp: false }\n            ]\n        } \n    },\n    otherProp: { value: 3 }\n}\n\nprint myModelThree\nprint myModelThree.modelValue\nprint myModelThree.modelValue.subNestedModel\nprint myModelThree.modelValue.subNestedModel.nestedModel\nprint myModelThree.modelValue.subNestedModel.nestedModel[1]\nprint myModelThree.modelValue.subNestedModel.nestedModel[2]\nprint myModelThree.modelValue.subNestedModel.nestedModel[1].numberProp\nconst textPropValue = myModelThree.modelValue.subNestedModel.nestedModel[1].textProp\nprint textPropValue \nprint textPropValue == 'one'\nprint myModelThree.modelValue.subNestedModel.nestedModel[1].textProp\nprint myModelThree.modelValue.subNestedModel.nestedModel[1].booleanProp\nprint myModelThree.modelValue.subNestedModel.nestedModel[2].numberProp\nprint myModelThree.modelValue.subNestedModel.nestedModel[2].textProp\nprint myModelThree.modelValue.subNestedModel.nestedModel[2].booleanProp"}]}